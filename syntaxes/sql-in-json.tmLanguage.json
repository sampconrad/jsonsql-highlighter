{
  "scopeName": "source.sql-in-json",
  "fileTypes": ["json"],
  "patterns": [
    {
      "include": "#json-structure"
    }
  ],
  "repository": {
    "json-structure": {
      "patterns": [
        {
          "name": "string.quoted.double.json.key",
          "match": "\"[^\"]*\"(?=\\s*:)"
        },
        {
          "name": "string.quoted.double.json",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "keyword.operator",
              "match": "'[^']*'"
            },
             {
               "name": "variable.parameter.sql",
               "match": "<[A-Za-z][A-Za-z0-9_]*>"
             },
            {
              "name": "string.quoted.double.json.key",
              "match": "\\{[^}]*\\}"
            },
            {
              "include": "#sql-content"
            },
            {
              "name": "constant.character.escape.json",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "constant.numeric.json",
          "match": "\\b-?\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b"
        },
        {
          "name": "constant.language.json",
          "match": "\\b(true|false|null)\\b"
        },
        {
          "name": "punctuation.separator.key-value.json",
          "match": ":"
        },
        {
          "name": "punctuation.separator.dictionary.pair.json",
          "match": ","
        },
        {
          "name": "punctuation.definition.dictionary.begin.json",
          "match": "\\{"
        },
        {
          "name": "punctuation.definition.dictionary.end.json",
          "match": "\\}"
        },
        {
          "name": "punctuation.definition.array.begin.json",
          "match": "\\["
        },
        {
          "name": "punctuation.definition.array.end.json",
          "match": "\\]"
        }
      ]
    },
     "sql-content": {
       "patterns": [
          {
            "name": "storage.type.sql",
            "match": "/\\*[\\s\\S]*?\\*/"
          },
         {
           "name": "keyword.control",
           "match": "(?i)(\\b|^)(SELECT|FROM|WHERE|GROUP\\s+BY|ORDER\\s+BY|HAVING|LIMIT|OFFSET|UNION|UNION\\s+ALL|INTERSECT|EXCEPT|DISTINCT|ALL)\\b"
         },
        {
          "name": "entity.name.tag.sql",
          "match": "(?i)(\\b|^)(JOIN|INNER\\s+JOIN|LEFT\\s+JOIN|RIGHT\\s+JOIN|FULL\\s+JOIN|CROSS\\s+JOIN|ON|AS|CASE|WHEN|THEN|ELSE|END|CREATE|TABLE|INDEX|VIEW|TRIGGER|INSERT|INTO|VALUES|UPDATE|SET|DELETE|DROP|ALTER|RENAME|TO|ADD|COLUMN)\\b"
        },
        {
          "name": "keyword.other",
          "match": "(?i)(\\b|^)(IFNULL|COALESCE|NULLIF|IS\\s+NULL|IS\\s+NOT\\s+NULL|IN|NOT\\s+IN|EXISTS|NOT\\s+EXISTS|BETWEEN|NOT\\s+BETWEEN|LIKE|NOT\\s+LIKE|GLOB|NOT\\s+GLOB|REGEXP|NOT\\s+REGEXP|MATCH|NOT\\s+MATCH|AND|OR|NOT|TRUE|FALSE|NULL|PRIMARY\\s+KEY|FOREIGN\\s+KEY|UNIQUE|NOT\\s+NULL|DEFAULT|CHECK|AUTOINCREMENT|VARCHAR|TEXT|INTEGER|REAL|BLOB|NUMERIC|BOOLEAN|DATE|DATETIME|TIME|TIMESTAMP)\\b"
        },
        {
          "name": "support.function",
          "match": "(?i)(\\b|^)(COUNT|SUM|AVG|MIN|MAX|GROUP_CONCAT|UPPER|LOWER|LENGTH|SUBSTR|REPLACE|TRIM|LTRIM|RTRIM|ROUND|ABS|RANDOM|RANDOMBLOB|ZEROBLOB|HEX|UNHEX|QUOTE|GLOB|LIKE|MATCH|REGEXP|CAST|TYPEOF|INSTR|PRINTF|FORMAT|JULIANDAY|DATETIME|DATE|TIME|STRFTIME|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|NOW|EXTRACT|YEAR|MONTH|DAY|HOUR|MINUTE|SECOND|MICROSECOND|WEEKDAY|YEARDAY|WEEK|QUARTER|DAYOFWEEK|DAYOFYEAR|WEEKOFYEAR|LAST_INSERT_ROWID|CHANGES|TOTAL_CHANGES|SQL_VERSION|SQL_SOURCE_ID|SQL_VERSION_NUMBER|SQL_COMPILEOPTION_GET|SQL_COMPILEOPTION_USED|Upper|GLOB|substr|length|IfNull|Group_Concat|upper|ifnull|group_concat|substr|replace|trim|ltrim|rtrim|round|abs|random|randomblob|zeroblob|hex|unhex|quote|like|match|regexp|cast|typeof|instr|printf|format|julianday|datetime|date|time|strftime|current_date|current_time|current_timestamp|now|extract|year|month|day|hour|minute|second|microsecond|weekday|yearday|week|quarter|dayofweek|dayofyear|weekofyear|last_insert_rowid|changes|total_changes|sql_version|sql_source_id|sql_version_number|sql_compileoption_get|sql_compileoption_used)\\b"
        },
        {
          "name": "constant.language.sql",
          "match": "[+\\-*/%=<>!&|^~]|==|!=|<>|<=|>=|\\|\\||&&"
        },
        {
          "name": "string.quoted.double.sql",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.sql",
              "match": "\\\""
            }
          ]
        },
        {
          "name": "string.quoted.backtick.sql",
          "begin": "`",
          "end": "`"
        },
        {
          "name": "variable.other.sql",
          "match": "\\b\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b"
        },
        {
          "name": "comment.line.sql",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "entity.name.table.sql",
          "match": "\\b[A-Z][A-Z0-9_]*\\b"
        },
        {
          "name": "entity.name.column.sql",
          "match": "\\b[A-Z][A-Z0-9_]*\\.[A-Za-z][A-Za-z0-9_]*\\b"
        },
        {
          "name": "variable.other.sql",
          "match": "\\b[a-z_][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "variable.parameter.sql",
          "match": "\\?"
        },
        {
          "name": "entity.name.column.sql",
          "match": "[,.]"
        },
        {
          "name": "punctuation.separator.sql",
          "match": "[;]"
        },
         {
           "name": "punctuation.definition.parenthesis.sql",
           "match": "[()]"
         },
         {
           "name": "punctuation.definition.bracket.sql",
           "match": "[\\[\\]]"
         },
         {
           "name": "punctuation.definition.brace.sql",
           "match": "[\\{\\}]"
         },
         {
           "name": "string.quoted.double.json.key",
           "match": "\\{[^}]*\\}"
         }
      ]
    }
  }
}